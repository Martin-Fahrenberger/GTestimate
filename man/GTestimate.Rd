% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GTestimate.R, R/zzz.R
\docType{package}
\name{GTestimate}
\alias{GTestimate}
\alias{GTestimate.matrix}
\alias{GTestimate.dgCMatrix}
\alias{GTestimate.DelayedMatrix}
\alias{GTestimate.Seurat}
\alias{GTestimate.SingleCellExperiment}
\title{GTestimate}
\usage{
GTestimate(
  object,
  size.factor = 10000,
  log1p.transform = TRUE,
  rescale = FALSE,
  block.size,
  assay
)

\method{GTestimate}{matrix}(
  object,
  size.factor = 10000,
  log1p.transform = TRUE,
  rescale = FALSE
)

\method{GTestimate}{dgCMatrix}(
  object,
  size.factor = 10000,
  log1p.transform = TRUE,
  rescale = FALSE
)

\method{GTestimate}{DelayedMatrix}(
  object,
  size.factor = 10000,
  log1p.transform = TRUE,
  rescale = FALSE,
  block.size = 1000L
)

\method{GTestimate}{Seurat}(
  object,
  size.factor = 10000,
  log1p.transform = TRUE,
  rescale = FALSE,
  assay = "RNA",
  ...
)

\method{GTestimate}{SingleCellExperiment}(
  object,
  size.factor = 10000,
  log1p.transform = TRUE,
  rescale = FALSE,
  assay = "counts",
  ...
)
}
\arguments{
\item{object}{An object containing a scRNA-seq count-matrix in a gene x counts format.}

\item{size.factor}{Either a numeric vector with one entry per cell, which gives the size factors for cell-level normalization (size factors can be calculated with e.g. scuttle::pooledSizeFactors()) or a number giving the library-size all cells should be scaled to. This defaults to 10,000 in order to behave similar to Seurat's RC and LogNormalize.}

\item{log1p.transform}{If TRUE, the GT-estimates are log1p transformed, defaults to TRUE to behave similar to Seurat's LogNormalize}

\item{rescale}{If TRUE Good-Turing results will be rescaled to add up to 1, before size factors are applied.}

\item{block.size}{For DelayedArray ojects defines the number of cells read into memory at the same time, this defaults to 1000. Smaller block.sizes require less RAM, but will significantly increase runtime.
A minimum of 100 is enforced to protect the user.}

\item{assay}{For Seurat objects: set the assay from which to extract the count matrix, defaults to 'RNA' as this is typically were scRNA-seq count data is stored.

For SingleCellExperiment objects: set the assay from which to extract the count matrix, defaults to 'counts' as this is typically were scRNA-seq count data is stored.}
}
\value{
Returns object with Good-Turing gene expression estimates. For Seurat and SingleCellExperiment objects also adds a Metadata vector missing_mass which gives the estimated portion of mRNA's in the cell belonging to unobserved genes (refered to as P0 in Gale and Sampson 1995)
}
\description{
Implements the simple Good-Turing estimation for scRNA-seq relative gene expression estimation.

Description of your package
}
\details{
GTestimate is the main function of the GTestimate package.
It provides methods to calculate the Good-Turing frequency estimates for common scRNA-seq count matrix formats.
GTestimate currently provides methods for regular matrices, sparse dgCMatrix matrices, delayedMatrix matrices, Seurat objects and SingleCellExperiment objects.

For matrix input a matrix (either sparse, delayed or dense depending on input) will be returned, containing the Good-Turing estimates for the given count-matrix.

For Seurat objects a new GTestimate assay will be created within the object (and set as the DefaultAssay). This assay copies the previous counts-data into it's counts slot, and adds the GTestimates in the data slot, additionally the missing_mass will be calculated and added as meta-data.

For SingleCellExperiment objects a new assay (called GTestimate) will be created within the object, additionally the missing_mass will be calculated and added as colData.
}
\examples{
library(Seurat)
data('pbmc_small')
GTestimate(pbmc_small)
}
\author{
Martin Fahrenberger
}
